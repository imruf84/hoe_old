renderer:
---------
	- háttérben futó daemon, ami OSMesa-t használ
	- a játék szerver küldené neki az utasításokat (begin render, use material, draw rect stb.)
		+ aktív kommunikáció
		+ nem kell folyton újra indítani a renderert
		+ nem szükséges extra tárhely
		- daemon-nal való kommunikáció lehet, hogy csak linuxon futna (mkfifo)
		példaprogram: http://www.jonathanbeard.io/tutorials/CtoJava
	- vagy
	- a játékszerver futtatná a renderert egy scene állományt ráeresztve, ami egyszerû utasításokat tartalmazna (soronként olvasva hajtaná végre)
		+ egyszerû leimplementálni
		+ mûködne windowson és linuxon is egyaránt
		- extra tárhelyet igényel a scene fájl

fizikai motorok:
----------------

követelmény:
	- terep rombolás
	- animált karakterek kezelése

JBullet:
	http://jbullet.advel.cz/
	https://stackoverflow.com/questions/12927654/jbullet-example

ode4j:
	https://github.com/tzaeschke/ode4j/blob/master/demo/src/main/java/org/ode4j/demo/DemoTrimesh.java

dyn4j:
	http://www.dyn4j.org/

react4j:
	https://github.com/flow/react

position-based-dynamics:
	https://github.com/InteractiveComputerGraphics/PositionBasedDynamics/tree/master/Simulation
	https://bundle-archive.plex.tv/Scrawk/Position-Based-Dynamics/tree/master/Assets (c# átirat, amit én is tudok java-sítani)

https://github.com/samuelgirardin/Energy.js

http://lo-th.github.io/Oimo.js/#donut:
	van soft body
	nincs folyadék

https://github.com/NathanJAdams/verJ
	javaban van írva
	nincs példaprogram
	elvileg van ütközésvizsgálat???

https://github.com/saharan/OimoPhysics/tree/master/src/oimo/dynamics
	javahoz nagyon hasonló nyelv
	van egy vagon joint (breakable is)
	nincs folyadék
	nincs soft body de van rugó kényszerítõ
	
	

hasznos linkek:
---------------
	érdekes algoritmusok (implementálva Unitiben): https://www.digital-dust.com/code